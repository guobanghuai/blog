{"remainingRequest":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/gbh/Desktop/gbh/blog/docs/js/insertAdjacentHTML.md?vue&type=template&id=389bce85&","dependencies":[{"path":"/Users/gbh/Desktop/gbh/blog/docs/js/insertAdjacentHTML.md","mtime":1548230079848},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"insertadjacent-html-text\\\">insertAdjacent HTML/Text</h1> <h2 id=\\\"insertadjacenthtml\\\">insertAdjacentHTML</h2> <p><code>insertAdjacentHTML()</code> 将指定的文本解析为HTML或XML，并将结果节点插入到DOM树中的指定位置。它不会重新解析它正在使用的元素，因此它不会破坏元素内的现有元素。这避免了额外的序列化步骤，使其比直接innerHTML操作更快。</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>element<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">insertAdjacentHTML</span><span class=\\\"token punctuation\\\">(</span>position<span class=\\\"token punctuation\\\">,</span> htmlString<span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div><p><strong>position是相对于元素的位置，并且必须是以下字符串之一 ：</strong></p> <ul><li>'beforebegin'\\n元素自身的前面。</li> <li>'afterbegin'\\n插入元素内部的第一个子节点之前。</li> <li>'beforeend'\\n插入元素内部的最后一个子节点之后。</li> <li>'afterend'\\n元素自身的后面。</li></ul> <h2 id=\\\"insertadjacenttext\\\">insertAdjacentText</h2> <p>使用方法同上 <code>insertAdjacentHTML()</code>，应在仅插入文本时使用，这样可以不经过HTML解释器的转换，提高性能。</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>element<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">insertAdjacentText</span><span class=\\\"token punctuation\\\">(</span>position<span class=\\\"token punctuation\\\">,</span> htmlString<span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div> \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}