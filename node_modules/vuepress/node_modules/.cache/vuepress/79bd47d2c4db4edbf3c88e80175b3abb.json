{"remainingRequest":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/gbh/Desktop/gbh/blog/docs/realize/promise.md?vue&type=template&id=b899e9fe&","dependencies":[{"path":"/Users/gbh/Desktop/gbh/blog/docs/realize/promise.md","mtime":1548231093899},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"promise\\\">Promise</h1> <div class=\\\"language-ts extra-class\\\"><pre class=\\\"language-ts\\\"><code><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">MyPromise</span> <span class=\\\"token punctuation\\\">{</span>\\n  status<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pendding'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'resloved'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'rejected'</span>\\n  data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span>\\n  onResolvedCallback<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Array</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">Function</span><span class=\\\"token operator\\\">&gt;</span>\\n  onRejectedCallback<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Array</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">Function</span><span class=\\\"token operator\\\">&gt;</span>\\n\\n\\n  then<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>onFulfill<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">,</span> onReject<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token keyword\\\">void</span>\\n  <span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token keyword\\\">void</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Promise</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">MyPromise</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">private</span> status\\n  <span class=\\\"token keyword\\\">private</span> data\\n  <span class=\\\"token keyword\\\">private</span> onResolvedCallback\\n  <span class=\\\"token keyword\\\">private</span> onRejectedCallback\\n\\n  <span class=\\\"token keyword\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>executor<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Function</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'pendding'</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onResolvedCallback <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onRejectedCallback <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">resolve</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> value<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'pendding'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'resloved'</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> value\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onResolvedCallback<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>fn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token function\\\">fn</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reject</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'pendding'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'rejected'</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span> reason\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onRejectedCallback<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>fn<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token function\\\">fn</span><span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">executor</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>onFulfill<span class=\\\"token punctuation\\\">,</span> onReject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> self <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span>\\n    <span class=\\\"token keyword\\\">let</span> promise2\\n    onFulfill <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> onFulfill <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span> <span class=\\\"token operator\\\">?</span> onFulfill <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> v\\n    onReject <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> onReject <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span> <span class=\\\"token operator\\\">?</span> onReject <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">throw</span> v\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'resolved'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> promise2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">onFulfill</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            x<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'rejected'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> promise2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">var</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">onReject</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            x<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'pendding'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      promise2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        self<span class=\\\"token punctuation\\\">.</span>onResolvedCallback<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">let</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">onFulfill</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token function\\\">resolvePromise</span><span class=\\\"token punctuation\\\">(</span>promise2<span class=\\\"token punctuation\\\">,</span> x<span class=\\\"token punctuation\\\">,</span> resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n        self<span class=\\\"token punctuation\\\">.</span>onRejectedCallback<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">let</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">onReject</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token function\\\">resolvePromise</span><span class=\\\"token punctuation\\\">(</span>promise2<span class=\\\"token punctuation\\\">,</span> x<span class=\\\"token punctuation\\\">,</span> resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> promise2\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">race</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">resolvePromise</span><span class=\\\"token punctuation\\\">(</span>promise2<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Function</span><span class=\\\"token punctuation\\\">,</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Function</span><span class=\\\"token punctuation\\\">,</span> resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Function</span><span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">Function</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> then\\n  <span class=\\\"token keyword\\\">var</span> thenCalledOrThrow <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>promise2 <span class=\\\"token operator\\\">===</span> x<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">TypeError</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Chaining cycle detected for promise!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token keyword\\\">instanceof</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'pendding'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      x<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>v<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolvePromise</span><span class=\\\"token punctuation\\\">(</span>promise2<span class=\\\"token punctuation\\\">,</span> v<span class=\\\"token punctuation\\\">,</span> resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      x<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> x <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'object'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> x <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n      then <span class=\\\"token operator\\\">=</span> x<span class=\\\"token punctuation\\\">.</span>then\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> then <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        then<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">rs</span><span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>thenCalledOrThrow<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span>\\n          thenCalledOrThrow <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">resolvePromise</span><span class=\\\"token punctuation\\\">(</span>promise2<span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">,</span> resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">rj</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>thenCalledOrThrow<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span>\\n          thenCalledOrThrow <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>thenCalledOrThrow<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span>\\n      thenCalledOrThrow <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre></div> \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}