{"remainingRequest":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/gbh/Desktop/gbh/blog/docs/js/insertAdjacentHTML.md?vue&type=template&id=389bce85&","dependencies":[{"path":"/Users/gbh/Desktop/gbh/blog/docs/js/insertAdjacentHTML.md","mtime":1548228517317},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"insertadjacent-html-text\">insertAdjacent HTML/Text</h1>\n<h2 id=\"insertadjacenthtml\">insertAdjacentHTML</h2>\n<p><code>insertAdjacentHTML()</code> 将指定的文本解析为HTML或XML，并将结果节点插入到DOM树中的指定位置。它不会重新解析它正在使用的元素，因此它不会破坏元素内的现有元素。这避免了额外的序列化步骤，使其比直接innerHTML操作更快。</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentHTML</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> htmlString<span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>position是相对于元素的位置，并且必须是以下字符串之一 ：</strong></p>\n<ul>\n<li>'beforebegin'\n元素自身的前面。</li>\n<li>'afterbegin'\n插入元素内部的第一个子节点之前。</li>\n<li>'beforeend'\n插入元素内部的最后一个子节点之后。</li>\n<li>'afterend'\n元素自身的后面。</li>\n</ul>\n<h2 id=\"insertadjacenttext\">insertAdjacentText</h2>\n<p>使用方法同上 <code>insertAdjacentHTML()</code>，应在仅插入文本时使用，这样可以不经过HTML解释器的转换，提高性能。</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentText</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> htmlString<span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--> <comment-comment/></div>\n",null]}