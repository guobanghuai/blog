{"remainingRequest":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/gbh/Desktop/gbh/blog/docs/js/throttleDebounce.md?vue&type=template&id=3376aa9a&","dependencies":[{"path":"/Users/gbh/Desktop/gbh/blog/docs/js/throttleDebounce.md","mtime":1548231093899},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"节流-防抖\\\">节流 &amp; 防抖</h1> <h2 id=\\\"函数节流-throttle\\\">函数节流 throttle</h2> <p>指定时间间隔内只会执行一次任务</p> <p>常用于滚动条滚动监听等</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">throttle</span><span class=\\\"token punctuation\\\">(</span>fn<span class=\\\"token punctuation\\\">,</span> threshhold<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> timeout\\n  <span class=\\\"token keyword\\\">var</span> start <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span>\\n  <span class=\\\"token keyword\\\">var</span> threshhold <span class=\\\"token operator\\\">=</span> threshhold <span class=\\\"token operator\\\">||</span> <span class=\\\"token number\\\">160</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">,</span> args <span class=\\\"token operator\\\">=</span> arguments<span class=\\\"token punctuation\\\">,</span>\\n      curr <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">0</span>\\n\\n    <span class=\\\"token function\\\">clearTimeout</span><span class=\\\"token punctuation\\\">(</span>timeout<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>curr <span class=\\\"token operator\\\">-</span> start <span class=\\\"token operator\\\">&gt;=</span> threshhold<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      fn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//只执行一部分方法，这些方法是在某个时间段内执行一次</span>\\n      start <span class=\\\"token operator\\\">=</span> curr\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      timeout <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        fn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> threshhold<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n</code></pre></div><h2 id=\\\"函数防抖-debounce\\\">函数防抖 debounce</h2> <p>任务频繁触发的情况下，只有任务触发的间隔超过指定间隔的时候，任务才会执行</p> <p>即：用户在不触发事件时，才触发相应动作，以抑制本来在事件中要执行的动作。</p> <p>常用于用户输入验证等</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span>func<span class=\\\"token punctuation\\\">,</span> delay<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> timeout\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">clearTimeout</span><span class=\\\"token punctuation\\\">(</span>timeout<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">var</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">,</span> args <span class=\\\"token operator\\\">=</span> arguments\\n        \\n        timeout <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n          func<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>delay<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">TIP</p> <p><a href=\\\"http://demo.nimius.net/debounce_throttle/\\\">查看 <code>throttle</code> 和 <code>debounce</code> 可视化的差异</a></p></div> \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}