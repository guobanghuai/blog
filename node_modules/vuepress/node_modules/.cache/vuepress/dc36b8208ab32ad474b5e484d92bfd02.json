{"remainingRequest":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/gbh/Desktop/gbh/blog/docs/css/pseudo.md?vue&type=template&id=48ab2bbd&","dependencies":[{"path":"/Users/gbh/Desktop/gbh/blog/docs/css/pseudo.md","mtime":1548231093899},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gbh/Desktop/gbh/blog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"伪类和伪元素\\\">伪类和伪元素</h1> <h2 id=\\\"区别\\\">区别</h2> <h3 id=\\\"伪类\\\">伪类</h3> <ul><li>伪类更多的定义的是状态，如<code>:hover</code>，或者说是一个可以使用 CSS 进行修饰的特定的特殊元素</li> <li>伪类使用一个冒号<code>:</code></li></ul> <h3 id=\\\"伪元素\\\">伪元素</h3> <ul><li>伪元素简单来说就是不存在于DOM文档树中的虚拟的元素，它们和HTML元素一样，但是你又无法使用JavaScript去获取，如<code>:before</code></li> <li>伪元素使用两个冒号<code>::</code></li></ul> <h2 id=\\\"伪类-2\\\">伪类</h2> <ol><li><p><code>:focus</code></p> <p>选择获得焦点的元素</p></li> <li><p><code>:visited</code></p> <p>选择已访问的链接</p></li> <li><p><code>:link</code></p> <p>选择未被访问的链接</p></li> <li><p><code>:active</code></p> <p>选择活动链接,即当链接被点击时的状态</p></li> <li><p><code>:lang</code></p> <p>选取带有以指定值开头的 lang 属性的元素</p> <div class=\\\"language-css extra-class\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token selector\\\">div:lang(hello)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">background</span><span class=\\\"token punctuation\\\">:</span>red<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><div class=\\\"language-html extra-class\\\"><pre class=\\\"language-html\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">lang</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">'</span>hello<span class=\\\"token punctuation\\\">'</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>foo<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div></li> <li><p><code>:required</code></p> <p>选择具有required 属性的表单元素</p></li> <li><p><code>:valid</code></p> <p>选择通过匹配正确的所要求的表单元素</p></li> <li><p><code>:invalid</code></p> <p>伪类指定一个不匹配指定要求的表单元素</p> <p>6,7,8虽然能辅助表单验证，但好像并不能阻止提交，只能起到辅助提示的作用</p></li> <li><p><code>:not</code></p> <p>排除其他选择器</p> <div class=\\\"language-css extra-class\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token selector\\\">ul &gt; li:not(:last-child)::after</span> <span class=\\\"token punctuation\\\">{</span>\\n \\t<span class=\\\"token property\\\">float</span><span class=\\\"token punctuation\\\">:</span>left<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>除了最后一个li其他都左浮动</p> <p><code>:not</code>中可以写任意选择器</p></li> <li><p><code>:nth-child</code></p></li></ol> <p>选择元素的第n个子元素</p> <div class=\\\"language-css extra-class\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">nth-child</span><span class=\\\"token punctuation\\\">(</span>even<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">/* 下标为偶数的子元素 */</span>\\n<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">nth-child</span><span class=\\\"token punctuation\\\">(</span>odd<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">/* 下标为奇数的子元素 */</span>\\n<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">nth-child</span><span class=\\\"token punctuation\\\">(</span>3n<span class=\\\"token punctuation\\\">)</span>  <span class=\\\"token comment\\\">/* 下标为3的倍数的子元素 */</span>\\n<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">nth-child</span><span class=\\\"token punctuation\\\">(</span>-n + 4<span class=\\\"token punctuation\\\">)</span>  <span class=\\\"token comment\\\">/* 下标小于4的子元素 */</span>\\n</code></pre></div><ol start=\\\"11\\\"><li><p><code>:checked</code>\\n选择已被选中的单选元素</p></li> <li><p><code>:only-child</code>\\n选择仅有一个子元素时的子元素</p></li> <li><p><code>:only-of-type</code>\\n选择父节点中仅有一种符合类型的元素</p></li></ol> <h2 id=\\\"伪元素-2\\\">伪元素</h2> <ol><li><p><code>::selection</code></p> <p>设置选中文本的样式</p></li> <li><p><code>::placeholder</code></p> <p>设置表单元素<code>placeholder</code>属性的样式</p></li> <li><p><code>::first-letter</code></p> <p>设置段落的第一个字体的样式</p></li> <li><p><code>::first-line</code></p> <p>设置段落的第一行文字的样式</p></li></ol> \"),_c('comment-comment')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}